# {{{Color Schemes
background_opacity: 1.0
# {{{ Forest Night
colors:
  primary:
    background: '0x323d43'
    foreground: '0xd8cbb2'

  normal:
    black:   '0x868d80'
    red:     '0xe3888a'
    green:   '0xa7bf81'
    yellow:  '0xd9bd87'
    blue:    '0x91bebb'
    magenta: '0xd3a5be'
    cyan:    '0x8fc09b'
    white:   '0xd8cbb2'

  bright:
    black:   '0x868d80'
    red:     '0xe3888a'
    green:   '0xa7bf81'
    yellow:  '0xd9bd87'
    blue:    '0x91bebb'
    magenta: '0xd3a5be'
    cyan:    '0x8fc09b'
    white:   '0xd8cbb2'
# }}}
# # {{{ Gruvbox Material Dark
# colors:
#   primary:
#     background: '0x282828'
#     foreground: '0xd4be98'
#
#   normal:
#     black:   '0x504945'
#     red:     '0xea6962'
#     green:   '0xa9b665'
#     yellow:  '0xd8a657'
#     blue:    '0x7daea3'
#     magenta: '0xd3869b'
#     cyan:    '0x89b482'
#     white:   '0xd4be98'
#
#   bright:
#     black:   '0x504945'
#     red:     '0xea6962'
#     green:   '0xa9b665'
#     yellow:  '0xd8a657'
#     blue:    '0x7daea3'
#     magenta: '0xd3869b'
#     cyan:    '0x89b482'
#     white:   '0xd4be98'
# # }}}
# # {{{ Gruvbox Material Light
# colors:
#   primary:
#     background: '0xf2e5bc'
#     foreground: '0x654735'
#
#   normal:
#     black:   '0x654735'
#     red:     '0xc14a4a'
#     green:   '0x6c782e'
#     yellow:  '0xb47109'
#     blue:    '0x45707a'
#     magenta: '0x945e80'
#     cyan:    '0x4c7a5d'
#     white:   '0x928374'
#
#   bright:
#     black:   '0x654735'
#     red:     '0xc14a4a'
#     green:   '0x6c782e'
#     yellow:  '0xb47109'
#     blue:    '0x45707a'
#     magenta: '0x945e80'
#     cyan:    '0x4c7a5d'
#     white:   '0x928374'
# # }}}
# # {{{ Edge Light
# colors:
#   primary:
#     background: "0xfafafa"
#     foreground: "0x4b505b"
#
#   normal:
#     black: "0x4b505b"
#     red: "0xd15f5f"
#     green: "0x608e32"
#     yellow: "0xbe7e05"
#     blue: "0x5079be"
#     magenta: "0xb05ccc"
#     cyan: "0x3a8b84"
#     white: "0x949ba5"
#
#   bright:
#     black: "0x4b505b"
#     red: "0xd15f5f"
#     green: "0x608e32"
#     yellow: "0xbe7e05"
#     blue: "0x5079be"
#     magenta: "0xb05ccc"
#     cyan: "0x3a8b84"
#     white: "0x949ba5"
# # }}}
# # {{{ Edge Dark
# colors:
#   primary:
#     background: "0x30323a"
#     foreground: "0xbcc4d1"
#
#   normal:
#     black: "0x3e4249"
#     red: "0xf27a7a"
#     green: "0xa1c286"
#     yellow: "0xd9b575"
#     blue: "0x75b6e8"
#     magenta: "0xd798e9"
#     cyan: "0x70bab9"
#     white: "0x88909f"
#
#   bright:
#     black: "0x3e4249"
#     red: "0xf27a7a"
#     green: "0xa1c286"
#     yellow: "0xd9b575"
#     blue: "0x75b6e8"
#     magenta: "0xd798e9"
#     cyan: "0x70bab9"
#     white: "0x88909f"
# # }}}
# }}}
# Font{{{
# # {{{Fira Code iCursive S12
# font:
#   # Normal (roman) font face
#   normal:
#     family: Fira Code iCursive S12
#     style: Regular
#
#   # Bold font face
#   bold:
#     family: Fira Code iCursive S12
#     style: Bold
#
#   # Italic font face
#   italic:
#     family: Fira Code iCursive S12
#     style: Italic
#
#   # Point size
#   size: 12.0
#
#   # Offset is the extra space around each character. `offset.y` can be thought of
#   # as modifying the line spacing, and `offset.x` as modifying the letter spacing.
#   offset:
#     x: 0
#     y: 0
#
#   # Glyph offset determines the locations of the glyphs within their cells with
#   # the default being at the bottom. Increasing `x` moves the glyph to the right,
#   # increasing `y` moves the glyph upwards.
#   glyph_offset:
#     x: 0
#     y: 0
#
# # }}}
# # {{{Fira Code iCursive Op
# font:
#   # Normal (roman) font face
#   normal:
#     family: Fira Code iCursive Op
#     style: Regular
#
#   # Bold font face
#   bold:
#     family: Fira Code iCursive Op
#     style: Bold
#
#   # Italic font face
#   italic:
#     family: Fira Code iCursive Op
#     style: Italic
#
#   # Point size
#   size: 12.0
#
#   # Offset is the extra space around each character. `offset.y` can be thought of
#   # as modifying the line spacing, and `offset.x` as modifying the letter spacing.
#   offset:
#     x: 0
#     y: 0
#
#   # Glyph offset determines the locations of the glyphs within their cells with
#   # the default being at the bottom. Increasing `x` moves the glyph to the right,
#   # increasing `y` moves the glyph upwards.
#   glyph_offset:
#     x: 0
#     y: 0
#
# # }}}
# # {{{Source Code Pro iCursive S12
# font:
#   # Normal (roman) font face
#   normal:
#     family: Source Code Pro iCursive S12
#     style: Regular
#
#   # Bold font face
#   bold:
#     family: Source Code Pro iCursive S12
#     style: Bold
#
#   # Italic font face
#   italic:
#     family: Source Code Pro iCursive S12
#     style: Italic
#
#   # Point size
#   size: 12.0
#
#   # Offset is the extra space around each character. `offset.y` can be thought of
#   # as modifying the line spacing, and `offset.x` as modifying the letter spacing.
#   offset:
#     x: 0
#     y: 0
#
#   # Glyph offset determines the locations of the glyphs within their cells with
#   # the default being at the bottom. Increasing `x` moves the glyph to the right,
#   # increasing `y` moves the glyph upwards.
#   glyph_offset:
#     x: 0
#     y: 0
#
# # }}}
# # {{{Source Code Pro iCursive Op
# font:
#   # Normal (roman) font face
#   normal:
#     family: Source Code Pro iCursive Op
#     style: Regular
#
#   # Bold font face
#   bold:
#     family: Source Code Pro iCursive Op
#     style: Bold
#
#   # Italic font face
#   italic:
#     family: Source Code Pro iCursive Op
#     style: Italic
#
#   # Point size
#   size: 12.0
#
#   # Offset is the extra space around each character. `offset.y` can be thought of
#   # as modifying the line spacing, and `offset.x` as modifying the letter spacing.
#   offset:
#     x: 0
#     y: 0
#
#   # Glyph offset determines the locations of the glyphs within their cells with
#   # the default being at the bottom. Increasing `x` moves the glyph to the right,
#   # increasing `y` moves the glyph upwards.
#   glyph_offset:
#     x: 0
#     y: 0
#
# # }}}
# # {{{InconsolataLGC iCursive S12
# font:
#   # Normal (roman) font face
#   normal:
#     family: InconsolataLGC iCursive S12
#     style: Regular
#
#   # Bold font face
#   bold:
#     family: InconsolataLGC iCursive S12
#     style: Bold
#
#   # Italic font face
#   italic:
#     family: InconsolataLGC iCursive S12
#     style: Italic
#
#   # Point size
#   size: 11.0
#
#   # Offset is the extra space around each character. `offset.y` can be thought of
#   # as modifying the line spacing, and `offset.x` as modifying the letter spacing.
#   offset:
#     x: 0
#     y: 0
#
#   # Glyph offset determines the locations of the glyphs within their cells with
#   # the default being at the bottom. Increasing `x` moves the glyph to the right,
#   # increasing `y` moves the glyph upwards.
#   glyph_offset:
#     x: 0
#     y: 0
#
# # }}}
# # {{{InconsolataLGC iCursive Op
# font:
#   # Normal (roman) font face
#   normal:
#     family: InconsolataLGC iCursive Op
#     style: Regular
#
#   # Bold font face
#   bold:
#     family: InconsolataLGC iCursive Op
#     style: Bold
#
#   # Italic font face
#   italic:
#     family: InconsolataLGC iCursive Op
#     style: Italic
#
#   # Point size
#   size: 11.0
#
#   # Offset is the extra space around each character. `offset.y` can be thought of
#   # as modifying the line spacing, and `offset.x` as modifying the letter spacing.
#   offset:
#     x: 0
#     y: 0
#
#   # Glyph offset determines the locations of the glyphs within their cells with
#   # the default being at the bottom. Increasing `x` moves the glyph to the right,
#   # increasing `y` moves the glyph upwards.
#   glyph_offset:
#     x: 0
#     y: 0
#
# # }}}
# # {{{Meslo iCursive S12
# font:
#   # Normal (roman) font face
#   normal:
#     family: Meslo iCursive S12
#     style: Regular
#
#   # Bold font face
#   bold:
#     family: Meslo iCursive S12
#     style: Bold
#
#   # Italic font face
#   italic:
#     family: Meslo iCursive S12
#     style: Italic
#
#   # Point size
#   size: 11.0
#
#   # Offset is the extra space around each character. `offset.y` can be thought of
#   # as modifying the line spacing, and `offset.x` as modifying the letter spacing.
#   offset:
#     x: 0
#     y: 0
#
#   # Glyph offset determines the locations of the glyphs within their cells with
#   # the default being at the bottom. Increasing `x` moves the glyph to the right,
#   # increasing `y` moves the glyph upwards.
#   glyph_offset:
#     x: 0
#     y: 0
#
# # }}}
# # {{{Meslo iCursive Op
# font:
#   # Normal (roman) font face
#   normal:
#     family: Meslo iCursive Op
#     style: Regular
#
#   # Bold font face
#   bold:
#     family: Meslo iCursive Op
#     style: Bold
#
#   # Italic font face
#   italic:
#     family: Meslo iCursive Op
#     style: Italic
#
#   # Point size
#   size: 11.0
#
#   # Offset is the extra space around each character. `offset.y` can be thought of
#   # as modifying the line spacing, and `offset.x` as modifying the letter spacing.
#   offset:
#     x: 0
#     y: 0
#
#   # Glyph offset determines the locations of the glyphs within their cells with
#   # the default being at the bottom. Increasing `x` moves the glyph to the right,
#   # increasing `y` moves the glyph upwards.
#   glyph_offset:
#     x: 0
#     y: 0
#
# # }}}
# # {{{Hack iCursive S12
# font:
#   # Normal (roman) font face
#   normal:
#     family: Hack iCursive S12
#     style: Regular
#
#   # Bold font face
#   bold:
#     family: Hack iCursive S12
#     style: Bold
#
#   # Italic font face
#   italic:
#     family: Hack iCursive S12
#     style: Italic
#
#   # Point size
#   size: 11.0
#
#   # Offset is the extra space around each character. `offset.y` can be thought of
#   # as modifying the line spacing, and `offset.x` as modifying the letter spacing.
#   offset:
#     x: 0
#     y: 0
#
#   # Glyph offset determines the locations of the glyphs within their cells with
#   # the default being at the bottom. Increasing `x` moves the glyph to the right,
#   # increasing `y` moves the glyph upwards.
#   glyph_offset:
#     x: 0
#     y: 0
#
# # }}}
# {{{Hack iCursive Op
font:
  # Normal (roman) font face
  normal:
    family: Hack iCursive Op
    style: Regular

  # Bold font face
  bold:
    family: Hack iCursive Op
    style: Bold

  # Italic font face
  italic:
    family: Hack iCursive Op
    style: Italic

  # Point size
  size: 11.0

  # Offset is the extra space around each character. `offset.y` can be thought of
  # as modifying the line spacing, and `offset.x` as modifying the letter spacing.
  offset:
    x: 0
    y: 0

  # Glyph offset determines the locations of the glyphs within their cells with
  # the default being at the bottom. Increasing `x` moves the glyph to the right,
  # increasing `y` moves the glyph upwards.
  glyph_offset:
    x: 0
    y: 0

# }}}
# # {{{InconsolataGo iCursive Pb
# font:
#   # Normal (roman) font face
#   normal:
#     family: InconsolataGo iCursive Pb
#     style: Regular
#
#   # Bold font face
#   bold:
#     family: InconsolataGo iCursive Pb
#     style: Bold
#
#   # Italic font face
#   italic:
#     family: InconsolataGo iCursive Pb
#     style: Italic
#
#   # Point size
#   size: 13.0
#
#   # Offset is the extra space around each character. `offset.y` can be thought of
#   # as modifying the line spacing, and `offset.x` as modifying the letter spacing.
#   offset:
#     x: 0
#     y: 0
#
#   # Glyph offset determines the locations of the glyphs within their cells with
#   # the default being at the bottom. Increasing `x` moves the glyph to the right,
#   # increasing `y` moves the glyph upwards.
#   glyph_offset:
#     x: 0
#     y: 0
#
# # }}}
# # {{{Roboto Mono iCursive Pt
# font:
#   # Normal (roman) font face
#   normal:
#     family: Roboto Mono iCursive Pt
#     style: Regular
#
#   # Bold font face
#   bold:
#     family: Roboto Mono iCursive Pt
#     style: Bold
#
#   # Italic font face
#   italic:
#     family: Roboto Mono iCursive Pt
#     style: Italic
#
#   # Point size
#   size: 11.0
#
#   # Offset is the extra space around each character. `offset.y` can be thought of
#   # as modifying the line spacing, and `offset.x` as modifying the letter spacing.
#   offset:
#     x: 0
#     y: 0
#
#   # Glyph offset determines the locations of the glyphs within their cells with
#   # the default being at the bottom. Increasing `x` moves the glyph to the right,
#   # increasing `y` moves the glyph upwards.
#   glyph_offset:
#     x: 0
#     y: 0
#
# # }}}
# # {{{Operator Mono Book
# font:
#   # Normal (roman) font face
#   normal:
#     family: Operator Mono Book
#     style: Regular
#
#   # Bold font face
#   bold:
#     family: Operator Mono Book
#     style: Bold
#
#   # Italic font face
#   italic:
#     family: Operator Mono Book
#     style: Italic
#
#   # Point size
#   size: 11.0
#
#   # Offset is the extra space around each character. `offset.y` can be thought of
#   # as modifying the line spacing, and `offset.x` as modifying the letter spacing.
#   offset:
#     x: 0
#     y: 0
#
#   # Glyph offset determines the locations of the glyphs within their cells with
#   # the default being at the bottom. Increasing `x` moves the glyph to the right,
#   # increasing `y` moves the glyph upwards.
#   glyph_offset:
#     x: 0
#     y: 0
#
# # }}}
# # {{{Operator Mono Light
# font:
#   # Normal (roman) font face
#   normal:
#     family: Operator Mono Light
#     style: Regular
#
#   # Bold font face
#   bold:
#     family: Operator Mono Light
#     style: Bold
#
#   # Italic font face
#   italic:
#     family: Operator Mono Light
#     style: Italic
#
#   # Point size
#   size: 11.0
#
#   # Offset is the extra space around each character. `offset.y` can be thought of
#   # as modifying the line spacing, and `offset.x` as modifying the letter spacing.
#   offset:
#     x: 0
#     y: 0
#
#   # Glyph offset determines the locations of the glyphs within their cells with
#   # the default being at the bottom. Increasing `x` moves the glyph to the right,
#   # increasing `y` moves the glyph upwards.
#   glyph_offset:
#     x: 0
#     y: 0
#
# # }}}
# # {{{Dank Mono
# font:
#   # Normal (roman) font face
#   normal:
#     family: Dank Mono
#     style: Regular
#
#   # Bold font face
#   bold:
#     family: Dank Mono
#     style: Bold
#
#   # Italic font face
#   italic:
#     family: Dank Mono
#     style: Italic
#
#   # Point size
#   size: 11.0
#
#   # Offset is the extra space around each character. `offset.y` can be thought of
#   # as modifying the line spacing, and `offset.x` as modifying the letter spacing.
#   offset:
#     x: 0
#     y: 0
#
#   # Glyph offset determines the locations of the glyphs within their cells with
#   # the default being at the bottom. Increasing `x` moves the glyph to the right,
#   # increasing `y` moves the glyph upwards.
#   glyph_offset:
#     x: 0
#     y: 0
#
# # }}}
# }}}
# Key bindings{{{
#
# Key bindings are specified as a list of objects. Each binding will specify
# a key and modifiers required to trigger it, terminal modes where the binding
# is applicable, and what should be done when the key binding fires. It can
# either send a byte sequnce to the running application (`chars`), execute
# a predefined action (`action`) or fork and execute a specified command plus
# arguments (`command`).
#
# Example:
#   `- { key: V, mods: Command, action: Paste }`
#
# Available fields:
#   - key
#   - mods (optional)
#   - chars | action | command (exactly one required)
#   - mode (optional)
#
# Values for `key`:
#   - `A` -> `Z`
#   - `F1` -> `F12`
#   - `Key1` -> `Key0`
#
#   A full list with available key codes can be found here:
#   https://docs.rs/glutin/*/glutin/enum.VirtualKeyCode.html#variants
#
# Values for `mods`:
#   - Command
#   - Control
#   - Shift
#   - Alt
#
#   Multiple `mods` can be combined using `|` like this: `mods: Control|Shift`.
#   Whitespace and capitalization is relevant and must match the example.
#
# Values for `chars`:
#   The `chars` field writes the specified string to the terminal. This makes
#   it possible to pass escape sequences.
#   To find escape codes for bindings like `PageUp` ("\x1b[5~"), you can run
#   the command `showkey -a` outside of tmux.
#   Note that applications use terminfo to map escape sequences back to
#   keys. It is therefore required to update the terminfo when
#   changing an escape sequence.
#
# Values for `action`:
#   - Paste
#   - PasteSelection
#   - Copy
#   - IncreaseFontSize
#   - DecreaseFontSize
#   - ResetFontSize
#   - ScrollPageUp
#   - ScrollPageDown
#   - ScrollToTop
#   - ScrollToBottom
#   - ClearHistory
#   - Hide
#   - Quit
#
# Values for `command`:
#   The `command` field must be a map containing a `program` string and
#   an `args` array of command line parameter strings.
#
#   Example:
#       `command: { program: "alacritty", args: ["-e", "vttest"] }`
#
# Values for `mode`:
#   - ~AppCursor
#   - AppCursor
#   - ~AppKeypad
#   - AppKeypad
key_bindings:
  - { key: V, mods: Control|Shift, action: Paste }
  - { key: C, mods: Control|Shift, action: Copy }
  # - { key: Paste, action: Paste }
  # - { key: Copy, action: Copy }
  # - { key: Q, mods: Command, action: Quit }
  # - { key: W, mods: Command, action: Quit }
  # - { key: Insert, mods: Shift, action: PasteSelection }
  # - { key: Key0, mods: Control, action: ResetFontSize }
  # - { key: Equals, mods: Control, action: IncreaseFontSize }
  # - { key: Subtract, mods: Control, action: DecreaseFontSize }
  # - { key: Home, chars: "\x1bOH", mode: AppCursor }
  # - { key: Home, chars: "\x1b[H", mode: ~AppCursor }
  # - { key: End, chars: "\x1bOF", mode: AppCursor }
  # - { key: End, chars: "\x1b[F", mode: ~AppCursor }
  # - { key: PageUp, mods: Shift, chars: "\x1b[5;2~" }
  # - { key: PageUp, mods: Control, chars: "\x1b[5;5~" }
  # - { key: PageUp, chars: "\x1b[5~" }
  # - { key: PageDown, mods: Shift, chars: "\x1b[6;2~" }
  # - { key: PageDown, mods: Control, chars: "\x1b[6;5~" }
  # - { key: PageDown, chars: "\x1b[6~" }
  # - { key: Tab, mods: Shift, chars: "\x1b[Z" }
  # - { key: Back, chars: "\x7f" }
  # - { key: Back, mods: Alt, chars: "\x1b\x7f" }
  # - { key: Insert, chars: "\x1b[2~" }
  # - { key: Delete, chars: "\x1b[3~" }
  # - { key: Left, mods: Shift, chars: "\x1b[1;2D" }
  # - { key: Left, mods: Control, chars: "\x1b[1;5D" }
  # - { key: Left, mods: Alt, chars: "\x1b[1;3D" }
  # - { key: Left, chars: "\x1b[D", mode: ~AppCursor }
  # - { key: Left, chars: "\x1bOD", mode: AppCursor }
  # - { key: Right, mods: Shift, chars: "\x1b[1;2C" }
  # - { key: Right, mods: Control, chars: "\x1b[1;5C" }
  # - { key: Right, mods: Alt, chars: "\x1b[1;3C" }
  # - { key: Right, chars: "\x1b[C", mode: ~AppCursor }
  # - { key: Right, chars: "\x1bOC", mode: AppCursor }
  # - { key: Up, mods: Shift, chars: "\x1b[1;2A" }
  # - { key: Up, mods: Control, chars: "\x1b[1;5A" }
  # - { key: Up, mods: Alt, chars: "\x1b[1;3A" }
  # - { key: Up, chars: "\x1b[A", mode: ~AppCursor }
  # - { key: Up, chars: "\x1bOA", mode: AppCursor }
  # - { key: Down, mods: Shift, chars: "\x1b[1;2B" }
  # - { key: Down, mods: Control, chars: "\x1b[1;5B" }
  # - { key: Down, mods: Alt, chars: "\x1b[1;3B" }
  # - { key: Down, chars: "\x1b[B", mode: ~AppCursor }
  # - { key: Down, chars: "\x1bOB", mode: AppCursor }
  # - { key: F1, chars: "\x1bOP" }
  # - { key: F2, chars: "\x1bOQ" }
  # - { key: F3, chars: "\x1bOR" }
  # - { key: F4, chars: "\x1bOS" }
  # - { key: F5, chars: "\x1b[15~" }
  # - { key: F6, chars: "\x1b[17~" }
  # - { key: F7, chars: "\x1b[18~" }
  # - { key: F8, chars: "\x1b[19~" }
  # - { key: F9, chars: "\x1b[20~" }
  # - { key: F10, chars: "\x1b[21~" }
  # - { key: F11, chars: "\x1b[23~" }
  # - { key: F12, chars: "\x1b[24~" }
  # - { key: F1, mods: Shift, chars: "\x1b[1;2P" }
  # - { key: F2, mods: Shift, chars: "\x1b[1;2Q" }
  # - { key: F3, mods: Shift, chars: "\x1b[1;2R" }
  # - { key: F4, mods: Shift, chars: "\x1b[1;2S" }
  # - { key: F5, mods: Shift, chars: "\x1b[15;2~" }
  # - { key: F6, mods: Shift, chars: "\x1b[17;2~" }
  # - { key: F7, mods: Shift, chars: "\x1b[18;2~" }
  # - { key: F8, mods: Shift, chars: "\x1b[19;2~" }
  # - { key: F9, mods: Shift, chars: "\x1b[20;2~" }
  # - { key: F10, mods: Shift, chars: "\x1b[21;2~" }
  # - { key: F11, mods: Shift, chars: "\x1b[23;2~" }
  # - { key: F12, mods: Shift, chars: "\x1b[24;2~" }
  # - { key: F1, mods: Control, chars: "\x1b[1;5P" }
  # - { key: F2, mods: Control, chars: "\x1b[1;5Q" }
  # - { key: F3, mods: Control, chars: "\x1b[1;5R" }
  # - { key: F4, mods: Control, chars: "\x1b[1;5S" }
  # - { key: F5, mods: Control, chars: "\x1b[15;5~" }
  # - { key: F6, mods: Control, chars: "\x1b[17;5~" }
  # - { key: F7, mods: Control, chars: "\x1b[18;5~" }
  # - { key: F8, mods: Control, chars: "\x1b[19;5~" }
  # - { key: F9, mods: Control, chars: "\x1b[20;5~" }
  # - { key: F10, mods: Control, chars: "\x1b[21;5~" }
  # - { key: F11, mods: Control, chars: "\x1b[23;5~" }
  # - { key: F12, mods: Control, chars: "\x1b[24;5~" }
  # - { key: F1, mods: Alt, chars: "\x1b[1;6P" }
  # - { key: F2, mods: Alt, chars: "\x1b[1;6Q" }
  # - { key: F3, mods: Alt, chars: "\x1b[1;6R" }
  # - { key: F4, mods: Alt, chars: "\x1b[1;6S" }
  # - { key: F5, mods: Alt, chars: "\x1b[15;6~" }
  # - { key: F6, mods: Alt, chars: "\x1b[17;6~" }
  # - { key: F7, mods: Alt, chars: "\x1b[18;6~" }
  # - { key: F8, mods: Alt, chars: "\x1b[19;6~" }
  # - { key: F9, mods: Alt, chars: "\x1b[20;6~" }
  # - { key: F10, mods: Alt, chars: "\x1b[21;6~" }
  # - { key: F11, mods: Alt, chars: "\x1b[23;6~" }
  # - { key: F12, mods: Alt, chars: "\x1b[24;6~" }
  # - { key: F1, mods: Super, chars: "\x1b[1;3P" }
  # - { key: F2, mods: Super, chars: "\x1b[1;3Q" }
  # - { key: F3, mods: Super, chars: "\x1b[1;3R" }
  # - { key: F4, mods: Super, chars: "\x1b[1;3S" }
  # - { key: F5, mods: Super, chars: "\x1b[15;3~" }
  # - { key: F6, mods: Super, chars: "\x1b[17;3~" }
  # - { key: F7, mods: Super, chars: "\x1b[18;3~" }
  # - { key: F8, mods: Super, chars: "\x1b[19;3~" }
  # - { key: F9, mods: Super, chars: "\x1b[20;3~" }
  # - { key: F10, mods: Super, chars: "\x1b[21;3~" }
  # - { key: F11, mods: Super, chars: "\x1b[23;3~" }
  # - { key: F12, mods: Super, chars: "\x1b[24;3~" }
# }}}
# {{{More
# Any items in the `env` entry below will be added as
# environment variables. Some entries may override variables
# set by alacritty itself.
env:
  # TERM variable
  #
  # This value is used to set the `$TERM` environment variable for
  # each instance of Alacritty. If it is not present, alacritty will
  # check the local terminfo database and use 'alacritty' if it is
  # available, otherwise 'xterm-256color' is used.
  #
  TERM: xterm-256color

window:
  # Window dimensions (changes require restart)
  #
  # Specified in number of columns/lines, not pixels.
  # If both are `0`, this setting is ignored.
  dimensions:
    columns: 180
    lines: 60

  # Window padding (changes require restart)
  #
  # Blank space added around the window in pixels. This padding is not scaled
  # by DPI and the specified value is always added at both opposing sides.
  padding:
    x: 0
    y: 0

  # Window decorations
  #
  # Values for `decorations`:
  #     - full: Borders and title bar
  #     - none: Neither borders nor title bar
  decorations: full

  # Startup Mode (changes require restart)
  #
  # Values for `startup_mode`:
  #   - Windowed
  #   - Maximized
  #   - Fullscreen
  #
  # Values for `startup_mode` (macOS only):
  #   - SimpleFullscreen
  startup_mode: Maximized

  # Window title
  #title: Alacritty

  # GTK theme variant (Linux only)
  #
  # Override the variant of the GTK theme. Commonly supported values are `dark` and `light`.
  # Set this to `None` to use the default theme variant.
  gtk_theme_variant: None

scrolling:
  # Maximum number of lines in the scrollback buffer.
  # Specifying '0' will disable scrolling.
  history: 10000

  # Number of lines the viewport will move for every line scrolled when
  # scrollback is enabled (history > 0).
  multiplier: 3

  # Faux Scrolling
  #
  # The `faux_multiplier` setting controls the number of lines the terminal
  # should scroll when the alternate screen buffer is active. This is used
  # to allow mouse scrolling for applications like `man`.
  #
  # Specifying `0` will disable faux scrolling.
  # faux_multiplier: 3

  # Scroll to the bottom when new text is written to the terminal.
  auto_scroll: false

# Spaces per Tab (changes require restart)
#
# This setting defines the width of a tab in cells.
#
# Some applications, like Emacs, rely on knowing about the width of a tab.
# To prevent unexpected behavior in these applications, it's also required to
# change the `it` value in terminfo when altering this setting.
tabspaces: 8

# Font configuration (changes require restart)
#
# Important font attributes like antialiasing, subpixel aa, and hinting can be
# controlled through fontconfig. Specifically, the following attributes should
# have an effect:
#   - hintstyle
#   - antialias
#   - lcdfilter
#   - rgba
#
# For instance, if you wish to disable subpixel antialiasing, you might set the
# rgba property to `none`. If you wish to completely disable antialiasing, you
# can set antialias to `false`.
#
# Please see these resources for more information on how to use fontconfig:
#   - https://wiki.archlinux.org/index.php/font_configuration#Fontconfig_configuration
#   - file:///usr/share/doc/fontconfig/fontconfig-user.html
# Send ESC (\x1b) before characters when alt is pressed.
alt_send_esc: true

debug:
  # Display the time it takes to redraw each frame.
  render_timer: false

  # Keep the log file after quitting Alacritty.
  persistent_logging: false

  # Log level
  #
  # Values for `log_level`:
  #   - None
  #   - Error
  #   - Warn
  #   - Info
  #   - Debug
  #   - Trace
  log_level: Warn

  # Print all received window events.
  print_events: false

  # Record all characters and escape sequences as test data.
  ref_test: false

# If `true`, bold text is drawn using the bright color variants.
draw_bold_text_with_bright_colors: true

# Visual Bell
#
# Any time the BEL code is received, Alacritty "rings" the visual bell. Once
# rung, the terminal background will be set to white and transition back to the
# default background color. You can control the rate of this transition by
# setting the `duration` property (represented in milliseconds). You can also
# configure the transition function by setting the `animation` property.
#
# Values for `animation`:
#   - Ease
#   - EaseOut
#   - EaseOutSine
#   - EaseOutQuad
#   - EaseOutCubic
#   - EaseOutQuart
#   - EaseOutQuint
#   - EaseOutExpo
#   - EaseOutCirc
#   - Linear
#
# Specifying a `duration` of `0` will disable the visual bell.
visual_bell:
  animation: EaseOutExpo
  duration: 0

# Mouse bindings
#
# Available fields:
#   - mouse
#   - action
#   - mods (optional)
#
# Values for `mouse`:
#   - Middle
#   - Left
#   - Right
#   - Numeric identifier such as `5`
#
# All available `mods` and `action` values are documented in the key binding
# section.
mouse_bindings:
  - { mouse: Middle, action: PasteSelection }

mouse:
  # Click settings
  #
  # The `double_click` and `triple_click` settings control the time
  # alacritty should wait for accepting multiple clicks as one double
  # or triple click.
  double_click: { threshold: 300 }
  triple_click: { threshold: 300 }
  hide_when_typing: false

selection:
  semantic_escape_chars: ',│`|:"'' ()[]{}<>'

  # When set to `true`, selected text will be copied to both the primary and
  # the selection clipboard. Otherwise, it will only be copied to the selection
  # clipboard.
  save_to_clipboard: false

dynamic_title: true

# Cursor style
#
# Values for 'cursor_style':
#   - Block
#   - Underline
#   - Beam
cursor:
  style: Block
  unfocused_hollow: true

# Live config reload (changes require restart)
live_config_reload: true

# Shell
#
# You can set `shell.program` to the path of your favorite shell, e.g. `/bin/fish`.
# Entries in `shell.args` are passed unmodified as arguments to the shell.
#
#shell:
#  program: /bin/bash
#  args:
#    - --login
# }}}
